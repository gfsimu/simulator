<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:GirlFriendCommon"
                	xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    >
    <SolidColorBrush x:Key="DefaultForeground" Color="#FFDEDEDE" PresentationOptions:Freeze="True"/>
    <SolidColorBrush x:Key="OverForeground" Color="#FFD83B1E" PresentationOptions:Freeze="True"/>
    <SolidColorBrush x:Key="EmphasisForeground" Color="#FF1ED826" PresentationOptions:Freeze="True"/>
    <SolidColorBrush x:Key="WarnForeground" Color="#FFD8D01E" PresentationOptions:Freeze="True"/>


    <SolidColorBrush x:Key="FocusedBorder" Color="#FFC9DFEF" PresentationOptions:Freeze="True"/>

    <SolidColorBrush x:Key="AtkForeground" Color="#DDE04518" PresentationOptions:Freeze="True"/>
    <SolidColorBrush x:Key="DefForeground" Color="#DD1886E0" PresentationOptions:Freeze="True"/>
    <SolidColorBrush x:Key="EventForeground" Color="#DD18E033" PresentationOptions:Freeze="True"/>
    <!--SWEET:FF5384-->
    <!--POP:ff8432-->
    <!--COOL:007eea-->
    <!--<SolidColorBrush x:Key="SweetForeground" Color="#DDF04CAD"/>
    <SolidColorBrush x:Key="CoolForeground" Color="#DD36B4F0"/>
    <SolidColorBrush x:Key="PopForeground" Color="#DDE07C18"/>-->
    <SolidColorBrush x:Key="SweetForeground" Color="#EDFF5384" PresentationOptions:Freeze="True"/>
    <SolidColorBrush x:Key="CoolForeground" Color="#ED007efa" PresentationOptions:Freeze="True"/>
    <SolidColorBrush x:Key="PopForeground" Color="#EDFF8432" PresentationOptions:Freeze="True"/>

    <SolidColorBrush x:Key="RedForeground" Color="#FFFF436E" PresentationOptions:Freeze="True"/>


    <SolidColorBrush x:Key="SweetBackground" Color="#BBFF5384" PresentationOptions:Freeze="True"/>
    <SolidColorBrush x:Key="CoolBackground" Color="#BB007eea" PresentationOptions:Freeze="True"/>
    <SolidColorBrush x:Key="PopBackground" Color="#BBFF8432" PresentationOptions:Freeze="True"/>
    <SolidColorBrush x:Key="YellSkillBackground" Color="#AAFF6633" PresentationOptions:Freeze="True"/>
    <SolidColorBrush x:Key="OverBackground" Color="#FFD83B1E" PresentationOptions:Freeze="True"/>

    <LinearGradientBrush x:Key="AtkBackground"  EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#44E04518" Offset="1"/>
        <GradientStop Color="#11E04518" Offset="0.8"/>
        <GradientStop Offset="0.6" Color="#008E2001"/>
        <GradientStop Offset="0" Color="#008E2001"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DefBackground"  EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#441886E0" Offset="1"/>
        <GradientStop Color="#111886E0" Offset="0.8"/>
        <GradientStop Offset="0.6" Color="#00010D8E"/>
        <GradientStop Offset="0" Color="#00010D8E"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="EventBackground"  EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#4418E033" Offset="1"/>
        <GradientStop Color="#1118E03C" Offset="0.8"/>
        <GradientStop Offset="0.6" Color="#00018E07"/>
        <GradientStop Offset="0" Color="#00018E07"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="WindowBackground" Color="#FF171819" PresentationOptions:Freeze="True"/>
    <LinearGradientBrush x:Key="DefaultBackground"  EndPoint="0,1" StartPoint="0,0" PresentationOptions:Freeze="True">
        <GradientStop Color="#FF2B2B2B" Offset="0"/>
        <GradientStop Color="#FF212025" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DefaultDarkBackground"  EndPoint="0,1" StartPoint="0,0" PresentationOptions:Freeze="True">
        <GradientStop Color="#FF1C1C1C" Offset="0"/>
        <GradientStop Color="#FF1C1C1C" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ToggleOnColor" EndPoint="0,1" StartPoint="0,0" PresentationOptions:Freeze="True">
        <GradientStop Color="#FF868686" Offset="0"/>
        <GradientStop Color="#FF868686"/>
        <GradientStop Color="#FF868686" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ToggleOnBorderColor" EndPoint="0,1" StartPoint="0,0" PresentationOptions:Freeze="True">
        <GradientStop Color="#FF474747" Offset="0"/>
        <GradientStop Color="#FF474747"/>
        <GradientStop Color="#FF474747" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="IcnBrush" PresentationOptions:Freeze="True" StartPoint="0.60,1" EndPoint="0.4,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FFC4C9E0" />
            <GradientStop Offset="0.5" Color="#FFFFFFFF" />
            <GradientStop Offset="1" Color="#FFC4C9E0" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="IcnUnBrush" PresentationOptions:Freeze="True" StartPoint="0.60,1" EndPoint="0.4,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FF444940" />
            <GradientStop Offset="0.5" Color="#FF6F6F6F" />
            <GradientStop Offset="1" Color="#FF444940" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="IcnHeartBrush" PresentationOptions:Freeze="True" StartPoint="0.60,1" EndPoint="0.4,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FFFD789F" />
            <GradientStop Offset="1" Color="#FFFD789F" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <DrawingBrush x:Key="IcoSearch" Stretch="Uniform" PresentationOptions:Freeze="True">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="{StaticResource IcnBrush}" Geometry="F1 M 392.327,292.327C 395.232,289.421 399.943,289.421 402.849,292.327C 405.456,294.934 405.724,298.994 403.653,301.899L 409.783,308.029C 410.015,308.261 410.046,308.607 409.853,308.801L 408.801,309.853C 408.607,310.046 408.261,310.015 408.029,309.783L 401.899,303.653C 398.994,305.724 394.934,305.456 392.327,302.849C 389.421,299.943 389.421,295.232 392.327,292.327 Z M 394.08,294.08C 392.143,296.017 392.143,299.158 394.08,301.095C 396.017,303.032 399.158,303.032 401.095,301.095C 403.032,299.158 403.032,296.017 401.095,294.08C 399.158,292.143 396.017,292.143 394.08,294.08 Z " />
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="IcoLock" Stretch="Uniform">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="{StaticResource IcnBrush}" Geometry="M 32,38.784C 32,39.7907 31.1827,40.6094 30.1746,40.6094L 6.74666,40.6094C 5.7373,40.6094 4.92131,39.7907 4.92131,38.784L 4.92131,15.356C 4.92131,14.348 5.7373,13.532 6.74666,13.532L 30.1746,13.532C 31.1827,13.532 32,14.348 32,15.356L 32,38.784 Z M 11.7986,9.47607C 11.816,5.81207 14.7906,2.84546 18.46,2.84546C 22.1279,2.84546 25.104,5.81207 25.1213,9.47607L 27.9679,9.47607C 27.9519,4.24005 23.7013,6.10352e-005 18.46,6.10352e-005C 13.2186,6.10352e-005 8.96928,4.24005 8.95329,9.47607L 11.7986,9.47607 Z M 11.792,14.5441L 8.95329,14.5441L 8.95329,9.47607L 11.792,9.47607L 11.792,14.5441 Z M 27.9679,14.5441L 25.1293,14.5441L 25.1293,9.47607L 27.9679,9.47607L 27.9679,14.5441 Z ">
                    </GeometryDrawing>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="IcoUnLock" Stretch="Uniform">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="{StaticResource IcnUnBrush}" Geometry="M 32,38.784C 32,39.7907 31.1827,40.6094 30.1746,40.6094L 6.74666,40.6094C 5.7373,40.6094 4.92131,39.7907 4.92131,38.784L 4.92131,15.356C 4.92131,14.348 5.7373,13.532 6.74666,13.532L 30.1746,13.532C 31.1827,13.532 32,14.348 32,15.356L 32,38.784 Z M 11.7986,9.47607C 11.816,5.81207 14.7906,2.84546 18.46,2.84546C 22.1279,2.84546 25.104,5.81207 25.1213,9.47607L 27.9679,9.47607C 27.9519,4.24005 23.7013,6.10352e-005 18.46,6.10352e-005C 13.2186,6.10352e-005 8.96928,4.24005 8.95329,9.47607L 11.7986,9.47607 Z M 11.792,14.5441L 8.95329,14.5441L 8.95329,9.47607L 11.792,9.47607L 11.792,14.5441 Z M 27.9679,14.5441L 25.1293,14.5441L 25.1293,9.47607L 27.9679,9.47607L 27.9679,14.5441 Z ">
                    </GeometryDrawing>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="IcoAdd" Stretch="Uniform" PresentationOptions:Freeze="True">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="{StaticResource IcnBrush}" Geometry="F1M646.688,13.5518L646.783,13.4593 646.965,13.639 668.383,35.0583 689.459,35.0583 665.155,10.751 657.503,3.10126 657.323,2.92023 664.876,-4.63837 689.184,-28.9417 668.109,-28.9417 646.688,-7.52637 636.15,3.01398 646.688,13.5518z" />
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="IcoRemove" Stretch="Uniform" PresentationOptions:Freeze="True">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="{StaticResource IcnBrush}" Geometry="F1M568.254,-7.43524L568.159,-7.34277 567.977,-7.52246 546.559,-28.9417 525.484,-28.9417 549.787,-4.63446 557.439,3.01532 557.619,3.19629 550.067,10.7549 525.758,35.0583 546.834,35.0583 568.254,13.6429 578.792,3.10254 568.254,-7.43524z" />
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="IcoStar" Stretch="Uniform" PresentationOptions:Freeze="True">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="#CC20202F" Geometry="F1 M 44.1565,27.3887L 37.0832,7.01028L 30.2259,27.3887L 8.22135,27.3887L 25.6885,40.5459L 18.7858,62.3231L 36.8671,48.8929L 55.642,62.3231L 48.2503,40.7506L 66.4453,27.3887L 44.1565,27.3887 Z " />
                    <GeometryDrawing Brush="#BBDFDFDF" Geometry="F1 M 23.3333,31.5763L 34.0653,31.5763L 37.3333,22.243L 40.5218,31.5763L 51.3333,31.5763L 42.4242,38.2913L 46.0701,48.546L 37.035,41.9172L 28.2121,48.546L 31.8182,38.2647L 23.3333,31.5763 Z " />
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="IcoStarMin" Stretch="Uniform" PresentationOptions:Freeze="True">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="#CCF0F0FF" Geometry="F1 M 44.1565,27.3887L 37.0832,7.01028L 30.2259,27.3887L 8.22135,27.3887L 25.6885,40.5459L 18.7858,62.3231L 36.8671,48.8929L 55.642,62.3231L 48.2503,40.7506L 66.4453,27.3887L 44.1565,27.3887 Z " />
                    <GeometryDrawing Brush="#BBDFDFDF" Geometry="F1 M 23.3333,31.5763L 34.0653,31.5763L 37.3333,22.243L 40.5218,31.5763L 51.3333,31.5763L 42.4242,38.2913L 46.0701,48.546L 37.035,41.9172L 28.2121,48.546L 31.8182,38.2647L 23.3333,31.5763 Z " />
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="IcoStay" Stretch="Uniform" PresentationOptions:Freeze="True">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="#CCC18F08" Geometry="F1 M 1.92,28.16L 1.92,22.4L 18.96,15.1625L 1.92,8L 1.92,2.23999L 25.44,12.3725L 25.44,17.96L 1.92,28.16 Z "/>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <DrawingBrush x:Key="IcoUp" Stretch="Uniform" PresentationOptions:Freeze="True">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="#CC28EA5D" Geometry="F1 M 26.64,26.9601L 20.88,26.9601L 13.6425,9.92004L 6.48,26.9601L 0.719994,26.9601L 10.8525,3.44006L 16.44,3.44006L 26.64,26.9601 Z "/>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="IcoRightArrorw" Stretch="Uniform" PresentationOptions:Freeze="True">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="#9939B27D" Geometry="M 0,32L 32,128L 0,224L 96,128L 0,32"/>
                    <GeometryDrawing Brush="#CC1CE88F" Geometry="F1 M 32,0L 128,128L 32,256L 192,128L 32,0 Z "/>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="IcoHeartOn" Stretch="Uniform" PresentationOptions:Freeze="True">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="{StaticResource IcnHeartBrush}" Geometry="F1 M 16.2708,6.86474L 16.1808,6.57973C 15.4908,4.82973 14.7083,3.53224 13.8333,2.68724C 12.5533,1.43724 10.8358,0.812241 8.68083,0.812241C 6.30583,0.812241 4.32083,1.62474 2.72583,3.24974C 1.19583,4.90974 0.430832,6.95724 0.430832,9.39223C 0.430832,13.1722 2.24333,17.9547 5.86833,23.7397C 8.80333,28.4247 12.2408,32.7672 16.1808,36.7672C 20.1808,32.2972 23.6333,27.8447 26.5383,23.4097C 30.3183,17.6597 32.2083,13.2697 32.2083,10.2397C 32.2083,7.20473 31.3483,4.82973 29.6283,3.11474C 28.0683,1.57974 26.1008,0.812241 23.7258,0.812241C 21.5708,0.812241 19.8358,1.46974 18.5208,2.78474C 17.5858,3.71974 16.8358,5.07973 16.2708,6.86474 Z ">
                    </GeometryDrawing>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <DrawingBrush x:Key="IcoHeartOff" Stretch="Uniform" PresentationOptions:Freeze="True">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="{StaticResource IcnBrush}" Geometry="F1 M 19.3333,36.9767L 19.1458,36.9317C 14.7408,32.4217 11.5533,28.7042 9.58333,25.7792C 6.16333,20.7442 4.45333,15.9392 4.45333,11.3642C 4.45333,8.81419 5.00333,6.93419 6.10333,5.72418C 7.20333,4.47919 8.89833,3.85669 11.1883,3.85669C 12.7133,3.85669 13.9333,4.65919 14.8483,6.26419C 15.3683,7.15919 15.8583,8.48669 16.3183,10.2467L 16.4533,10.8017C 16.6233,11.4817 16.9933,12.0217 17.5633,12.4217C 18.0983,12.7917 18.7008,12.9767 19.3708,12.9767C 20.0758,12.9767 20.6808,12.7917 21.1858,12.4217C 21.7558,12.0167 22.1408,11.4717 22.3408,10.7867L 22.6933,9.85669C 23.3483,7.96669 23.9583,6.63419 24.5233,5.85919C 25.4633,4.52419 26.6833,3.85669 28.1833,3.85669C 30.6233,3.85669 32.4058,4.51169 33.5308,5.82169C 34.6258,7.07169 35.1733,9.05418 35.1733,11.7692C 35.1733,15.1742 33.5408,19.2192 30.2758,23.9042C 28.4508,26.5592 25.4433,30.1817 21.2533,34.7717L 19.3333,36.9767 Z M 19.3333,7.69669L 19.8133,7.41919C 18.9783,5.23419 18.0458,3.65919 17.0158,2.69418C 15.4708,1.22919 13.3308,0.496689 10.5958,0.496689C 7.67083,0.496689 5.26083,1.45169 3.36583,3.36169C 1.53083,5.24169 0.613332,7.57419 0.613332,10.3592C 0.613332,15.1192 2.81583,20.7392 7.22083,27.2192C 10.5358,32.0392 14.7333,36.8917 19.8133,41.7767C 24.6633,36.5467 28.7108,31.5067 31.9558,26.6567C 36.3408,20.1767 38.5333,15.0567 38.5333,11.2967C 38.5333,7.82169 37.5158,5.11419 35.4808,3.17419C 33.6708,1.38919 31.3383,0.496689 28.4833,0.496689C 25.8433,0.496689 23.7458,1.24419 22.1908,2.73919C 21.0458,3.86419 20.0933,5.51669 19.3333,7.69669 Z ">
                    </GeometryDrawing>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <Style x:Key="BdrShowDetailColumnCommon" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#99707070"/>
        <Setter Property="BorderBrush" Value="#CCC0C0C0"/>
    </Style>
    <Style x:Key="BdrShowDetailDataCommon" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#99101020"/>
        <Setter Property="BorderBrush" Value="#CCC0C0C0"/>
    </Style>
    <Style x:Key="BdrShowDetailData" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#55505050"/>
        <Setter Property="BorderBrush" Value="#CCC0C0C0"/>
    </Style>

    <Style x:Key="LblShowDetailRowHeader" TargetType="{x:Type Label}">
        <Setter Property="LayoutTransform" >
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform ScaleX="1.3"/>
                    <RotateTransform Angle="-90"/>
                </TransformGroup>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="9"/>
        <Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
    </Style>

    <Style x:Key="DefaultFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Stroke="{StaticResource FocusedBorder}" StrokeThickness="1.5" Margin="-1" SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
    </Style>


    <LinearGradientBrush x:Key="ColorCheckBoxBorder"  StartPoint="0.5,0" EndPoint="0.5,1" PresentationOptions:Freeze="True">
        <GradientStop Offset="0" Color="#AA091A3E" />
        <GradientStop Offset="1" Color="#AA091A3E" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ColorCheckBoxOnBackground"  StartPoint="0.5,0" EndPoint="0.5,1" PresentationOptions:Freeze="True">
        <GradientStop Offset="0" Color="#EE1684F5" />
        <GradientStop Offset="1" Color="#EE1684F5" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ColorCheckBoxOffBackground"  StartPoint="0.5,0" EndPoint="0.5,1" PresentationOptions:Freeze="True">
        <GradientStop Offset="0" Color="#779FB1C2" />
        <GradientStop Offset="1" Color="#779FB1C2" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ColorCheckBoxBackgroundDisable" StartPoint="0.5,0" EndPoint="0.5,1" PresentationOptions:Freeze="True">
        <GradientStop Offset="0" Color="#EE13151D" />
        <GradientStop Offset="1" Color="#EE13151D" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ColorCheckMark"  StartPoint="0,0.5" EndPoint="1,0.5" PresentationOptions:Freeze="True">
        <GradientStop Offset="0" Color="#EEEFEFEF" />
        <GradientStop Offset="1" Color="#EEEFEFEF" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ColorCheckMarkOver"  StartPoint="0,0.5" EndPoint="1,0.5" PresentationOptions:Freeze="True">
        <GradientStop Offset="0" Color="#AAEFEFEF" />
        <GradientStop Offset="1" Color="#AAEFEFEF" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ColorCheckMarkDisable"  StartPoint="0,0.5" EndPoint="1,0.5" PresentationOptions:Freeze="True">
        <GradientStop Offset="0" Color="#66EFEFEF" />
        <GradientStop Offset="1" Color="#66EFEFEF" />
    </LinearGradientBrush>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
        <Setter Property="Background" Value="{StaticResource ColorCheckBoxOffBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource ColorCheckBoxBorder}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource DefaultFocusVisual}"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="Meiryo, MS UI Gothic" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Border Width="16"
                                Height="16"
                                Margin="3,3,3,3"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" />
                        <Path x:Name="Check"
                              Grid.Column="0"
                              Width="13"
                              Height="13"
                              Margin="-1,-1,0,0"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="M6,26 L15,26 26,11 17,34 z"
                              Fill="{StaticResource ColorCheckMark}"
                              Stretch="Fill"
                              Stroke="{x:Null}"
                              Visibility="Collapsed"/>
                        <ContentPresenter Grid.Column="1"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="2,0,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Check" Property="Fill" Value="{StaticResource ColorCheckMarkOver}" />
                            <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" Value="{StaticResource ColorCheckBoxOnBackground}" />
                            <Setter TargetName="Check" Property="Fill" Value="{StaticResource ColorCheckMark}" />
                            <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false"/>
                                <Condition Property="IsChecked" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource ColorCheckBoxBackgroundDisable}" />
                            <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Check" Property="Fill" Value="{StaticResource ColorCheckMarkDisable}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false"/>
                                <Condition Property="IsChecked" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource ColorCheckBoxBackgroundDisable}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridCheckBoxStyle" TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
    </Style>

    <SolidColorBrush x:Key="SliderThumbHoverBackground" Color="#FF86ECFF"/>
    <SolidColorBrush x:Key="SliderThumbHoverBorder" Color="#FF86ECFF"/>

    <SolidColorBrush x:Key="SliderThumbPressedBackground" Color="#FF0193B4"/>
    <SolidColorBrush x:Key="SliderThumbPressedBorder" Color="#FF0193B4"/>
    <SolidColorBrush x:Key="SliderTrackNormalBackground" Color="#FF5B5B5B"/>
    <SolidColorBrush x:Key="SliderTrackNormalBorder" Color="#FF212324"/>
    <SolidColorBrush x:Key="SliderSelectBackground" Color="#FF2369FE"/>
    <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalSliderSelectRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Rectangle Fill="Transparent"/>
                        <Border x:Name="TrackBackground" Margin="5,0,-5,0" VerticalAlignment="center" Height="10.0" Background="{StaticResource SliderSelectBackground}" BorderBrush="#00000000" BorderThickness="1" CornerRadius="3"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalSliderSelectRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Rectangle Fill="Transparent"/>
                        <Border x:Name="TrackBackground" Margin="0,-5,0,5" HorizontalAlignment="center" Width="10.0" Background="{StaticResource SliderSelectBackground}" BorderBrush="#00000000" BorderThickness="1" CornerRadius="3"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Width" Value="18"/>
        <Setter Property="Foreground" Value="#FF2369FE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Ellipse SnapsToDevicePixels="true" Fill="{TemplateBinding Foreground}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource SliderThumbHoverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource SliderThumbPressedBorder}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#FFAEB1AF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#FF3484A4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Border x:Name="TrackBackground" Margin="5,0" VerticalAlignment="center" Height="8.0" Background="{StaticResource SliderTrackNormalBackground}" BorderBrush="{StaticResource SliderTrackNormalBackground}" BorderThickness="1" CornerRadius="3" Grid.Row="1">
                                <Canvas Margin="-6,-1">
                                    <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0" Height="8.0" Visibility="Hidden"/>
                                </Canvas>
                            </Border>
                            <TickBar x:Name="TopTick" Height="8" Visibility="Visible" Grid.Row="1" Fill="{TemplateBinding Foreground}" Placement="Top"/>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource HorizontalSliderSelectRepeatButtonStyle}" Command="{x:Static Slider.DecreaseLarge}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}" Command="{x:Static Slider.IncreaseLarge}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Style="{StaticResource SliderThumbStyle}"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsSelectionRangeEnabled" Value="true">
                            <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Slider}">
                            <Border SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="TrackBackground" HorizontalAlignment="center" Margin="0,5" Width="8.0" Background="{StaticResource SliderTrackNormalBackground}" BorderBrush="{StaticResource SliderTrackNormalBorder}" BorderThickness="1" CornerRadius="3" Grid.Column="1">
                                        <Canvas Margin="-1,-6">
                                            <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0" Width="4.0" Visibility="Hidden"/>
                                        </Canvas>
                                    </Border>
                                    <TickBar x:Name="TopTick" Width="8" Visibility="Collapsed" Grid.Column="1" Fill="{TemplateBinding Foreground}" Placement="Left"/>
                                    <Track x:Name="PART_Track" Grid.Column="1">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource VerticalSliderSelectRepeatButtonStyle}" Command="{x:Static Slider.DecreaseLarge}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}" Command="{x:Static Slider.IncreaseLarge}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb x:Name="Thumb" Style="{StaticResource SliderThumbStyle}"/>
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TickPlacement" Value="Both">
                                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
        <Setter Property="BorderBrush" Value="#FFD5DFE5"/>
    </Style>

    <Style TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="#FF333333"/>
        <Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
    </Style>
    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="#FF383838"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="RowDetailsVisibilityMode" Value="Collapsed"/>
        <Setter Property="HorizontalGridLinesBrush" Value="#FF2D2E43"/>
        <Setter Property="VerticalGridLinesBrush" Value="#AA8F8991"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
    </Style>
    <SolidColorBrush x:Key="ColorToolTipBackground"
                     PresentationOptions:Freeze="True"
                     Color="#B0112243" />
    <SolidColorBrush x:Key="ColorToolTipBorder"
                     PresentationOptions:Freeze="True"
                     Color="#AA3355EE" />
    <SolidColorBrush x:Key="ColorToolTipForeground"
                     PresentationOptions:Freeze="True"
                     Color="#FFE5E8F7" />
    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="Background" Value="{StaticResource ColorToolTipBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource ColorToolTipBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource ColorToolTipForeground}" />
        <Setter Property="FontFamily" Value="Meiryo, MS UI Gothic" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter Margin="5,3,5,3" Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextToolTip" TargetType="{x:Type ToolTip}">
        <Setter Property="Background" Value="{StaticResource ColorToolTipBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource ColorToolTipBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource ColorToolTipForeground}" />
        <Setter Property="FontFamily" Value="Meiryo, MS UI Gothic" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <TextBlock MaxWidth="450"
                                   Margin="5,3,5,3"
                                   VerticalAlignment="Center"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   Text="{TemplateBinding Content}"
                                   TextWrapping="Wrap" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0" PresentationOptions:Freeze="True">
        <GradientStop Color="#FF474747" Offset="0"/>
        <GradientStop Color="#FF474747" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonDisableBackground" EndPoint="0,1" StartPoint="0,0" PresentationOptions:Freeze="True">
        <GradientStop Color="#FF272727" Offset="1"/>
        <GradientStop Color="#FF272727" Offset="0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF9F9F9F" PresentationOptions:Freeze="True"/>
    <SolidColorBrush x:Key="ButtonNormalForeground" Color="#FFE2E2E2" PresentationOptions:Freeze="True"/>
    <LinearGradientBrush x:Key="CoolColor" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FF007eea" Offset="0"/>
        <GradientStop Color="#FF007eea"/>
        <GradientStop Color="#FF007eea" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="CoolBorderColor" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFF3F3F3" Offset="0"/>
        <GradientStop Color="#FF040BD4"/>
        <GradientStop Color="#FF0019CC" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="SweetColor" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFA83052" Offset="0"/>
        <GradientStop Color="#FFA83052"/>
        <GradientStop Color="#FFA83052" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="SweetBorderColor" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFF3F3F3" Offset="0"/>
        <GradientStop Color="#FFFD0075"/>
        <GradientStop Color="#FFDE067D" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PopColor" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFFF8432" Offset="0"/>
        <GradientStop Color="#FFFF8432"/>
        <GradientStop Color="#FFFF8432" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PopBorderColor" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFF3F3F3" Offset="0"/>
        <GradientStop Color="#FFCE7301"/>
        <GradientStop Color="#FFDC9005" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="AllColor" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FF9CA0A6" Offset="0"/>
        <GradientStop Color="#FF9CA0A6"/>
        <GradientStop Color="#FF9CA0A6" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="AllBorderColor" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFF3F3F3" Offset="0"/>
        <GradientStop Color="#FFD6D6D6"/>
        <GradientStop Color="#FFE9E9E9" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonRedBackground" EndPoint="0,1" StartPoint="0,0" PresentationOptions:Freeze="True">
        <GradientStop Color="#FFB42855" Offset="0"/>
        <GradientStop Color="#FFB42855" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonBlueBackground" EndPoint="0,1" StartPoint="0,0" PresentationOptions:Freeze="True">
        <GradientStop Color="#FF2F4FE2" Offset="0"/>
        <GradientStop Color="#FF2F4FE2" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonGreenBackground" EndPoint="0,1" StartPoint="0,0" PresentationOptions:Freeze="True">
        <GradientStop Color="#FF1D8B36" Offset="0"/>
        <GradientStop Color="#FF1D8B36" Offset="1"/>
    </LinearGradientBrush>
    <Style TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonNormalForeground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value ="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Chrome" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Border SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" Margin="2">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="Chrome" Value="{StaticResource FocusedBorder}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                            <Setter Property="Background" Value="{StaticResource ButtonDisableBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RedButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{StaticResource ButtonRedBackground}"/>
    </Style>
    <Style x:Key="BlueButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{StaticResource ButtonBlueBackground}"/>
    </Style>
    <Style x:Key="GreenButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{StaticResource ButtonGreenBackground}"/>
    </Style>
    <Style x:Key="SmallButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonNormalForeground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value ="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Chrome" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="Chrome" Value="{StaticResource FocusedBorder}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="TextBoxBackground" PresentationOptions:Freeze="True" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Offset="0" Color="#FF606060" />
        <GradientStop Offset="1" Color="#FF606060" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TextBoxBackground_Over" PresentationOptions:Freeze="True" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Offset="0" Color="#FF707070" />
        <GradientStop Offset="1" Color="#FF707070" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TextBoxBackground_Focused" PresentationOptions:Freeze="True" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Offset="0" Color="#FF707070" />
        <GradientStop Offset="1" Color="#FF707070" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TextBoxBackground_ReadOnly" PresentationOptions:Freeze="True" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Offset="0" Color="#FF202020" />
        <GradientStop Offset="1" Color="#FF202020" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TextBoxBorder_Over" MappingMode="Absolute" PresentationOptions:Freeze="True" StartPoint="0,0" EndPoint="0,20">
        <GradientStop Offset="0" Color="#FFC9DFEF" />
        <GradientStop Offset="1" Color="#FFC9DFEF" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ReadOnlyForeground"
                     PresentationOptions:Freeze="True"
                     Color="#EEA0A0B0" />
    <SolidColorBrush x:Key="TextBoxBorder"
                     PresentationOptions:Freeze="True"
                     Color="#FF101012" />
    <Style  TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{StaticResource TextBoxBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource DefaultForeground}" />
        <Setter Property="Padding" Value="1"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder_Over}" />
                            <Setter Property="Background" Value="{StaticResource TextBoxBackground_Over}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder_Over}" />
                            <Setter Property="Background" Value="{StaticResource TextBoxBackground_Focused}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="#FF202020"/>
                            <Setter Property="Foreground" Value="#CCCFCFCF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ClearTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{StaticResource TextBoxBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{StaticResource DefaultForeground}" />
        <Setter Property="FontFamily" Value="Meiryo, MS UI Gothic" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Button x:Name="BtnClearCommand"
                                    Grid.Column="1"
                                    Width="20"
                                    Height="Auto"
                                    Margin="2,0,0,0"
                                    Command="{x:Static local:CustomCommands.ClearText}"
                                    CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                    Content="×"
                                            Style="{StaticResource SmallButton}"
                                    />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="BtnClearCommand" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter TargetName="BtnClearCommand" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder_Over}" />
                            <Setter Property="Background" Value="{StaticResource TextBoxBackground_Over}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder_Over}" />
                            <Setter Property="Background" Value="{StaticResource TextBoxBackground_Focused}" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource TextBoxBackground_ReadOnly}" />
                            <Setter Property="Foreground" Value="{StaticResource ReadOnlyForeground}" />
                            <Setter Property="Cursor" Value="Arrow" />
                            <Setter TargetName="BtnClearCommand" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource TextBoxBackground_ReadOnly}" />
                            <Setter Property="Foreground" Value="{StaticResource ReadOnlyForeground}" />
                            <Setter TargetName="BtnClearCommand" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SearchTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{StaticResource TextBoxBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{StaticResource DefaultForeground}" />
        <Setter Property="FontFamily" Value="Meiryo, MS UI Gothic" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Button x:Name="BtnClearCommand"
                                    Grid.Column="1"
                                    Width="20"
                                    Height="Auto"
                                    Margin="2,0,0,0"
                                    Command="{x:Static local:CustomCommands.ClearText}"
                                    CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                    Content="×"
                                            Style="{StaticResource SmallButton}"
                                    />
                            <Rectangle x:Name="SearchIcon"
                                               Grid.Column="1"
                                               Margin="2"
                                               Width="20"
                                               Height="Auto"
                                               Visibility="Collapsed"
                                               Fill="{StaticResource IcoSearch}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="BtnClearCommand" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="SearchIcon" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter TargetName="BtnClearCommand" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="SearchIcon" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder_Over}" />
                            <Setter Property="Background" Value="{StaticResource TextBoxBackground_Over}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder_Over}" />
                            <Setter Property="Background" Value="{StaticResource TextBoxBackground_Focused}" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource TextBoxBackground_ReadOnly}" />
                            <Setter Property="Foreground" Value="{StaticResource ReadOnlyForeground}" />
                            <Setter Property="Cursor" Value="Arrow" />
                            <Setter TargetName="BtnClearCommand" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource TextBoxBackground_ReadOnly}" />
                            <Setter Property="Foreground" Value="{StaticResource ReadOnlyForeground}" />
                            <Setter TargetName="BtnClearCommand" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SearchTransTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource SearchTextBox}">
        <Setter Property="Background" Value="#99606060" />
    </Style>

    <Style x:Key="ToggleButtonStyleBase" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonNormalForeground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Cursor" Value ="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Chrome" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Border SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" Margin="2">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ToggleButtonStyleBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Chrome" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Border SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" Margin="2">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Foreground" Value="#FFFFFFFF"/>
                            <Setter Property="Background" Value="{StaticResource ToggleOnColor}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource ToggleOnBorderColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="AllToggleButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ToggleButtonStyleBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Chrome" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Border SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" Margin="2">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Foreground" Value="#FFFFFFFF"/>
                            <Setter Property="Background" Value="{StaticResource AllColor}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource AllBorderColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CoolToggleButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ToggleButtonStyleBase}">
        <Setter Property="Foreground" Value="#FF42D9FB"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Chrome" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Border SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" Margin="2">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Foreground" Value="#FFFFFFFF"/>
                            <Setter Property="Background" Value="{StaticResource CoolColor}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource CoolBorderColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PopToggleButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ToggleButtonStyleBase}">
        <Setter Property="Foreground" Value="#FFF09E3C"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Chrome" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Border SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" Margin="2">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Foreground" Value="#FFFFFFFF"/>
                            <Setter Property="Background" Value="{StaticResource PopColor}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource PopBorderColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SweetToggleButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ToggleButtonStyleBase}">
        <Setter Property="Foreground" Value="#FFFF5384"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Chrome" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Border SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" Margin="2">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Foreground" Value="#FFE2E2E2"/>
                            <Setter Property="Background" Value="{StaticResource SweetColor}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource SweetBorderColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridCellStyleBase" TargetType="{x:Type DataGridCell}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="#EE202020"/>
                <Setter Property="Background" Value="#EE202020"/>
                <Setter Property="Foreground" Value="#FFFFFFFF"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style  TargetType="DataGridCell" BasedOn="{StaticResource DataGridCellStyleBase}">
    </Style>

    <Style x:Key="CenterCell"  TargetType="DataGridCell" BasedOn="{StaticResource DataGridCellStyleBase}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>
    <Style x:Key="NumberCell"  TargetType="DataGridCell" BasedOn="{StaticResource DataGridCellStyleBase}">
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
    </Style>

    <Style x:Key="HeaderCenterCell"  TargetType="DataGridCell" BasedOn="{StaticResource DataGridCellStyleBase}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="#772F2F2F"/>
    </Style>
    <Style x:Key="HeaderNumberCell"  TargetType="DataGridCell" BasedOn="{StaticResource DataGridCellStyleBase}">
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="Background" Value="#772F2F2F"/>
    </Style>
    
    <Style x:Key="AtkCell" TargetType="DataGridCell" BasedOn="{StaticResource NumberCell}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#AAAE2000" Offset="0"/>
                    <GradientStop Color="#AAAE2000" Offset="0.4"/>
                    <GradientStop Color="#AAAE2000" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DefCell" TargetType="DataGridCell" BasedOn="{StaticResource NumberCell}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#AA014BA4" Offset="0"/>
                    <GradientStop Color="#AA014BA4" Offset="0.4"/>
                    <GradientStop Color="#AA014BA4" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AtkSkillCell" TargetType="DataGridCell" BasedOn="{StaticResource CenterCell}">
        <Setter Property="Background" Value="#AAAE2000"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding 攻スキル}" Value="0">
                <Setter Property="Background" Value="#00000000"/>
            </DataTrigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="#EE202020"/>
                <Setter Property="Background" Value="#EE202020"/>
                <Setter Property="Foreground" Value="#FFFFFFFF"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DefSkillCell" TargetType="DataGridCell" BasedOn="{StaticResource CenterCell}">
        <Setter Property="Background" Value="#AA014BA4" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding 守スキル}" Value="0">
                <Setter Property="Background" Value="#00000000"/>
            </DataTrigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="#EE202020"/>
                <Setter Property="Background" Value="#EE202020"/>
                <Setter Property="Foreground" Value="#FFFFFFFF"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BonusCell" TargetType="DataGridCell" BasedOn="{StaticResource CenterCell}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Row[ボーナス有無]}" Value="False">
                <Setter Property="Foreground" Value="#77EFEFEF"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ボーナス}" Value="0">
                <Setter Property="Foreground" Value="#00000000"/>
            </DataTrigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="#EE202020"/>
                <Setter Property="Background" Value="#EE202020"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="SpecialCell" TargetType="DataGridCell" BasedOn="{StaticResource CenterCell}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding スペシャル}" Value="0">
                <Setter Property="Foreground" Value="#00000000"/>
            </DataTrigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="#EE202020"/>
                <Setter Property="Background" Value="#EE202020"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AttrCell" TargetType="DataGridCell" BasedOn="{StaticResource DataGridCellStyleBase}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding 属性}" Value="Sweet">
                <Setter Property="Background" >
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                            <GradientStop Color="#77FF5384" Offset="0"/>
                            <GradientStop Color="#77FF5384" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding 属性}" Value="Cool">
                <Setter Property="Background" >
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                            <GradientStop Color="#77007eea" Offset="0"/>
                            <GradientStop Color="#77007eea" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding 属性}" Value="Pop">
                <Setter Property="Background" >
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                            <GradientStop Color="#77FF8432" Offset="0"/>
                            <GradientStop Color="#77FF8432" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="#EE202020"/>
                <Setter Property="Background" Value="#EE202020"/>
                <Setter Property="Foreground" Value="#FFFFFFFF"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ImageCell" TargetType="{x:Type DataGridCell}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Image Width="20" Height="20" VerticalAlignment="Stretch" Stretch="Uniform" Source="{Binding 画像}" >
                            <Image.ToolTip>
                                <Image  Source="{Binding 画像}" Stretch="Uniform" Opacity="0.8" MaxWidth="240" MaxHeight="240" />
                            </Image.ToolTip>
                        </Image>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="#EE202020"/>
                <Setter Property="Background" Value="#EE202020"/>
                <Setter Property="Foreground" Value="#FFFFFFFF"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RankCell" TargetType="{x:Type DataGridCell}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Rectangle Grid.Column="0" x:Name="Rank1" Fill="{StaticResource IcoStarMin}" Width="10" Height="10"/>
                            <Rectangle Grid.Column="1" x:Name="Rank2" Fill="{StaticResource IcoStarMin}" Width="10" Height="10"/>
                            <Rectangle Grid.ColumnSpan="2" Grid.Row="1" x:Name="Rank3" Fill="{StaticResource IcoStarMin}" Width="10" Height="10"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding 進展}"  Value="1">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Rank2" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Rank3" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding 進展}"  Value="2">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Rank3" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="#EE202020"/>
                <Setter Property="Background" Value="#EE202020"/>
                <Setter Property="Foreground" Value="#FFFFFFFF"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FavorCell" TargetType="{x:Type DataGridCell}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0" x:Name="Favor1" Fill="{StaticResource IcoHeartOff}" Width="10" Height="10"/>
                                <Rectangle Grid.Column="1" x:Name="Favor2" Fill="{StaticResource IcoHeartOff}" Width="10" Height="10"/>
                                <Rectangle Grid.Column="2" x:Name="Favor3" Fill="{StaticResource IcoHeartOff}" Width="10" Height="10"/>
                            </Grid>
                            <Grid Grid.Row="1" HorizontalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto"  />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0" x:Name="Favor4" Fill="{StaticResource IcoHeartOff}" Width="10" Height="10"/>
                                <Rectangle Grid.Column="1" x:Name="Favor5" Fill="{StaticResource IcoHeartOff}" Width="10" Height="10"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding 好感度}"  Value="1">
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor1" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding 好感度}"  Value="2">
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor1" />
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor2" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding 好感度}"  Value="3">
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor1" />
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor2" />
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor3" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding 好感度}"  Value="4">
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor1" />
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor2" />
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor3" />
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor4" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding 好感度}"  Value="5">
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor1" />
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor2" />
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor3" />
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor4" />
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor5" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="#EE202020"/>
                <Setter Property="Background" Value="#EE202020"/>
                <Setter Property="Foreground" Value="#FFFFFFFF"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DummyCell" TargetType="{x:Type DataGridCell}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Ellipse Grid.Column="0" x:Name="Outer" Stroke="#FFD829FF" Width="14" Height="14"/>
                            <Ellipse Grid.Column="0" x:Name="Inner" Fill="#FFD829FF" Width="8" Height="8"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ダミー}"  Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Inner" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Outer" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="#EE202020"/>
                <Setter Property="Background" Value="#EE202020"/>
                <Setter Property="Foreground" Value="#FFFFFFFF"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="HasSkillCell" TargetType="{x:Type DataGridCell}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Ellipse Grid.Column="0" x:Name="Outer" Stroke="#FF9CB89A" Width="14" Height="14"/>
                            <Ellipse Grid.Column="0" x:Name="Inner" Fill="#FF9CB89A" Width="8" Height="8"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding 声援}"  Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Inner" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Outer" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="#EE202020"/>
                <Setter Property="Background" Value="#EE202020"/>
                <Setter Property="Foreground" Value="#FFFFFFFF"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="UnconfirmCell" TargetType="DataGridCell" BasedOn="{StaticResource NumberCell}">
        <Setter Property="Background" >
            <Setter.Value>
                <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                    <GradientStop Color="#33D853FF" Offset="0"/>
                    <GradientStop Color="#33EF53FF" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#FFFB2F73"/>
    </Style>

    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="DataGridColumnHeader">
        <Setter Property="Foreground" Value="{StaticResource DefaultForeground}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SeparatorBrush" Value="#FFA9AAAA" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Grid Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Fill).Color" To="#FF444448"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[3].Color" To="#7F9F9F9F"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[2].Color" To="#7C9F9F9F"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[1].Color" To="#729F9F9F"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[0].Color" To="#789F9F9F"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Fill).Color" To="#FF444448"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[0].Color" To="#B89F9F9F"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[1].Color" To="#B69F9F9F"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[2].Color" To="#BC9F9F9F"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[3].Color" To="#BF9F9F9F"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SortStates">
                                <VisualState x:Name="Unsorted" />
                                <VisualState x:Name="SortAscending">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Opacity" Duration="0" To="1.0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SortDescending">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Opacity" Duration="0" To="1.0"/>
                                        <DoubleAnimation Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="(RenderTransform).ScaleY" Duration="0" To="-.9"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Rectangle x:Name="BackgroundRectangle" Stretch="Fill" Fill="#FF141418" Grid.ColumnSpan="2" />

                        <Rectangle x:Name="BackgroundGradient" Stretch="Fill" Grid.ColumnSpan="2" >
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                                    <GradientStop Color="#FC202020" Offset="0.015" />
                                    <GradientStop Color="#F7202020" Offset="0.375" />
                                    <GradientStop Color="#F5202020" Offset="0.6" />
                                    <GradientStop Color="#F1202020" Offset="1" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>

                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition  Height="Auto"/>
                            </Grid.RowDefinitions>

                            <ContentPresenter Grid.RowSpan="2" Content="{TemplateBinding Content}" Margin="0,2,0,0"/>
                        </Grid>

                        <Path Grid.Row="0" Name="SortIcon" RenderTransformOrigin=".5,.5" HorizontalAlignment="Center" VerticalAlignment="Top" Opacity="0" Stretch="Uniform" Width="8"  Margin="0,0,0,0" Data="F1 M -5.215,6.099L 5.215,6.099L 0,0L -5.215,6.099 Z ">
                            <Path.Fill>
                                <LinearGradientBrush EndPoint="0.8,1" StartPoint="0.0,0">
                                    <GradientStop Color="#FFC2BFFF"/>
                                    <GradientStop Color="#FF50A2E8" Offset="1"/>
                                </LinearGradientBrush>
                            </Path.Fill>
                            <Path.RenderTransform>
                                <ScaleTransform ScaleX=".9" ScaleY=".9" />
                            </Path.RenderTransform>
                        </Path>

                        <Rectangle Name="VerticalSeparator" Grid.Column="1" Width="1" VerticalAlignment="Stretch" Fill="{TemplateBinding SeparatorBrush}" Visibility="{TemplateBinding SeparatorVisibility}" />
                        <Rectangle Name="HorizontalSeparator" Grid.ColumnSpan="2" Height="1" VerticalAlignment="Bottom" Fill="{TemplateBinding SeparatorBrush}" Visibility="{TemplateBinding SeparatorVisibility}" />

                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left"  Cursor="SizeWE" Style="{StaticResource ColumnHeaderGripperStyle}" />
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right"  Cursor="SizeWE" Style="{StaticResource ColumnHeaderGripperStyle}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CenterColumnHeader" TargetType="DataGridColumnHeader">
        <Setter Property="Foreground" Value="{StaticResource DefaultForeground}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SeparatorBrush" Value="#FFA9AAAA" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Grid Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Fill).Color" To="#FF444448"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[3].Color" To="#7F9F9F9F"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[2].Color" To="#7C9F9F9F"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[1].Color" To="#729F9F9F"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[0].Color" To="#789F9F9F"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Fill).Color" To="#FF444448"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[0].Color" To="#B89F9F9F"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[1].Color" To="#B69F9F9F"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[2].Color" To="#BC9F9F9F"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[3].Color" To="#BF9F9F9F"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SortStates">
                                <VisualState x:Name="Unsorted" />
                                <VisualState x:Name="SortAscending">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Opacity" Duration="0" To="1.0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SortDescending">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Opacity" Duration="0" To="1.0"/>
                                        <DoubleAnimation Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="(RenderTransform).ScaleY" Duration="0" To="-.9"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Rectangle x:Name="BackgroundRectangle" Stretch="Fill" Fill="#FF141418" Grid.ColumnSpan="2" />

                        <Rectangle x:Name="BackgroundGradient" Stretch="Fill" Grid.ColumnSpan="2" >
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                                    <GradientStop Color="#FC202020" Offset="0.015" />
                                    <GradientStop Color="#F7202020" Offset="0.375" />
                                    <GradientStop Color="#F5202020" Offset="0.6" />
                                    <GradientStop Color="#F1202020" Offset="1" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>

                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition  Height="Auto"/>
                            </Grid.RowDefinitions>


                            <TextBlock Grid.RowSpan="2" Text="{TemplateBinding Content}" Margin="0,2,0,0" TextAlignment="Center"  LineStackingStrategy="BlockLineHeight" TextBlock.LineHeight="12"/>

                        </Grid>

                        <Path Grid.Row="0" Name="SortIcon" RenderTransformOrigin=".5,.5" HorizontalAlignment="Center" VerticalAlignment="Top" Opacity="0" Stretch="Uniform" Width="8"  Margin="0,0,0,0" Data="F1 M -5.215,6.099L 5.215,6.099L 0,0L -5.215,6.099 Z ">
                            <Path.Fill>
                                <LinearGradientBrush EndPoint="0.8,1" StartPoint="0.0,0">
                                    <GradientStop Color="#FFC2BFFF"/>
                                    <GradientStop Color="#FF50A2E8" Offset="1"/>
                                </LinearGradientBrush>
                            </Path.Fill>
                            <Path.RenderTransform>
                                <ScaleTransform ScaleX=".9" ScaleY=".9" />
                            </Path.RenderTransform>
                        </Path>

                        <Rectangle Name="VerticalSeparator" Grid.Column="1" Width="1" VerticalAlignment="Stretch" Fill="{TemplateBinding SeparatorBrush}" Visibility="{TemplateBinding SeparatorVisibility}" />
                        <Rectangle Name="HorizontalSeparator" Grid.ColumnSpan="2" Height="1" VerticalAlignment="Bottom" Fill="{TemplateBinding SeparatorBrush}" Visibility="{TemplateBinding SeparatorVisibility}" />

                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left"  Cursor="SizeWE" Style="{StaticResource ColumnHeaderGripperStyle}" />
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right"  Cursor="SizeWE" Style="{StaticResource ColumnHeaderGripperStyle}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DataGridRow">
        <Setter Property="Background" Value="#44000000"/>
        <Setter Property="Foreground" Value="#FFEDEDED"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}"/>
                        </SelectiveScrollingGrid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding 属性}" Value="Sweet">
                <Setter Property="Background" >
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                            <GradientStop Color="#33FF5384" Offset="0"/>
                            <GradientStop Color="#33FF5384" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding 属性}" Value="Cool">
                <Setter Property="Background" >
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                            <GradientStop Color="#33007eea" Offset="0"/>
                            <GradientStop Color="#33007eea" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding 属性}" Value="Pop">
                <Setter Property="Background" >
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                            <GradientStop Color="#33FF8432" Offset="0"/>
                            <GradientStop Color="#33FF8432" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding 選抜選択}" Value="True">
                <Setter Property="Background" >
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                            <GradientStop Color="#AA39D681" Offset="0"/>
                            <GradientStop Color="#991DA059" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="UnconfirmRow" TargetType="DataGridRow">
        <Setter Property="Background" Value="#44000000"/>
        <Setter Property="Foreground" Value="#FFEDEDED"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}"/>
                        </SelectiveScrollingGrid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding 未確認}" Value="true">
                <Setter Property="Background" >
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                            <GradientStop Color="#33D853FF" Offset="0"/>
                            <GradientStop Color="#33EF53FF" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="#FFFB2F73"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RareRow" TargetType="DataGridRow">
        <Setter Property="Background" Value="#44000000"/>
        <Setter Property="Foreground" Value="#FFEDEDED"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}"/>
                        </SelectiveScrollingGrid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding レア}" Value="N">
                <Setter Property="Background" >
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                            <GradientStop Color="#3353F7FF" Offset="0"/>
                            <GradientStop Color="#5553F7FF" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding レア}" Value="HN">
                <Setter Property="Background" >
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                            <GradientStop Color="#5553FFE0" Offset="0"/>
                            <GradientStop Color="#3353FFE0" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding レア}" Value="R">
                <Setter Property="Background" >
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                            <GradientStop Color="#3353FFB9" Offset="0"/>
                            <GradientStop Color="#5553FFB9" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding レア}" Value="HR">
                <Setter Property="Background" >
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                            <GradientStop Color="#5553FF72" Offset="0"/>
                            <GradientStop Color="#3353FF72" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding レア}" Value="SR">
                <Setter Property="Background" >
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                            <GradientStop Color="#338AFF53" Offset="0"/>
                            <GradientStop Color="#558AFF53" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding レア}" Value="SSR">
                <Setter Property="Background" >
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                            <GradientStop Color="#55B9FF53" Offset="0"/>
                            <GradientStop Color="#33B9FF53" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding レア}" Value="LG">
                <Setter Property="Background" >
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                            <GradientStop Color="#33E0FF53" Offset="0"/>
                            <GradientStop Color="#55E0FF53" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#00000000" Offset="0"/>
                    <GradientStop Color="#FF6E6D6D" Offset="1"/>
                    <GradientStop Color="#02464545" Offset="0.803"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="2,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            <Setter Property="Background" TargetName="Bd" Value="#FF9E9E9E"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BonusListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#00000000" Offset="0"/>
                    <GradientStop Color="#02464545" Offset="0.9"/>
                    <GradientStop Color="#FF6E6D6D" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="2,0,0,0"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="BorderBrush" Value="#00000000"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Status}" Value="オーバー">
                            <Setter Property="Background" TargetName="Bd">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#92831515" Offset="0"/>
                                        <GradientStop Color="#92831515" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="MAX">
                            <Setter Property="Background" TargetName="Bd">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#92837915" Offset="0"/>
                                        <GradientStop Color="#92837915" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="適用範囲外">
                            <Setter Property="Background" TargetName="Bd">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#92158383" Offset="0"/>
                                        <GradientStop Color="#92158383" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="適用範囲内">
                            <Setter Property="Background" TargetName="Bd">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#92168320" Offset="0"/>
                                        <GradientStop Color="#92168320" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="未使用">
                            <Setter Property="Background" TargetName="Bd">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#92151A83" Offset="0"/>
                                        <GradientStop Color="#92151A83" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsBonusSelected}" Value="true">
                            <Setter Property="Background" TargetName="Bd">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#AA47E08D" Offset="0"/>
                                        <GradientStop Color="#AA47E08D" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            <Setter Property="Background" TargetName="Bd" Value="#FF9E9E9E"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxItemNameStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="BorderBrush" Value="#FF505050"/>
        <Setter Property="Padding" Value="3,0,3,0"/>
        <Setter Property="Foreground" Value="#FFEAEAEA"/>
        <Setter Property="Background" Value="#CF505050"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Attr}" Value="Sweet">
                            <Setter Property="Background" >
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                        <GradientStop Color="#AAFF5384" Offset="0"/>
                                        <GradientStop Color="#998F314C" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Attr}" Value="Cool">
                            <Setter Property="Background" >
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                        <GradientStop Color="#AA007eea" Offset="0"/>
                                        <GradientStop Color="#99004885" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Attr}" Value="Pop">
                            <Setter Property="Background" >
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                        <GradientStop Color="#AAFF8432" Offset="0"/>
                                        <GradientStop Color="#99954C1B" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="#DF6D6D6D"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboBoxItemStyleBase" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="3,0,3,0"/>
        <Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
        <Setter Property="Background" Value="#BF2B2B2B"/>
        <Setter Property="BorderBrush" Value="#EFCBCBCB"/>
        <Setter Property="BorderThickness" Value="0,0,0,1.5"/>
    </Style>

    <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource ComboBoxItemStyleBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="#DF6D6D6D"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxItemRankStyle" TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource ComboBoxItemStyleBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Rectangle Name="Rank1"  Fill="{StaticResource IcoStar}" Width="20" Height="20" Margin="4,2"/>
                            <Rectangle Name="Rank2" Grid.Column="1" Fill="{StaticResource IcoStar}" Width="20" Height="20" Margin="4,2"/>
                            <Rectangle Name="Rank3" Grid.Column="2" Fill="{StaticResource IcoStar}" Width="20" Height="20" Margin="4,2"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Content" Value="1">
                            <Setter Property="Visibility" Value="Hidden" TargetName="Rank2" />
                            <Setter Property="Visibility" Value="Hidden" TargetName="Rank3" />
                        </Trigger>
                        <Trigger Property="Content" Value="2">
                            <Setter Property="Visibility" Value="Hidden" TargetName="Rank3" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Value}" Value="1" >
                            <Setter Property="Visibility" Value="Hidden" TargetName="Rank2" />
                            <Setter Property="Visibility" Value="Hidden" TargetName="Rank3" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Value}" Value="2" >
                            <Setter Property="Visibility" Value="Hidden" TargetName="Rank3" />
                        </DataTrigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="#DF6D6D6D"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxItemFavorStyle" TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource ComboBoxItemStyleBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Rectangle Name="Favor1"  Fill="{StaticResource IcoHeartOff}" Width="12" Height="12" Margin="4,2"/>
                            <Rectangle Name="Favor2" Grid.Column="1" Fill="{StaticResource IcoHeartOff}" Width="12" Height="12" Margin="4,2"/>
                            <Rectangle Name="Favor3" Grid.Column="2" Fill="{StaticResource IcoHeartOff}" Width="12" Height="12" Margin="4,2"/>
                            <Rectangle Name="Favor4" Grid.Column="3" Fill="{StaticResource IcoHeartOff}" Width="12" Height="12" Margin="4,2"/>
                            <Rectangle Name="Favor5" Grid.Column="4" Fill="{StaticResource IcoHeartOff}" Width="12" Height="12" Margin="4,2"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Content" Value="1">
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor1" />
                        </Trigger>
                        <Trigger Property="Content" Value="2">
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor1" />
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor2" />
                        </Trigger>
                        <Trigger Property="Content" Value="3">
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor1" />
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor2" />
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor3" />
                        </Trigger>
                        <Trigger Property="Content" Value="4">
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor1" />
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor2" />
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor3" />
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor4" />
                        </Trigger>
                        <Trigger Property="Content" Value="5">
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor1" />
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor2" />
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor3" />
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor4" />
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor5" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Value}" Value="1" >
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor1" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Value}" Value="2" >
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor1" />
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor2" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Value}" Value="3" >
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor1" />
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor2" />
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor3" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Value}" Value="4" >
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor1" />
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor2" />
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor3" />
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor4" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Value}" Value="5" >
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor1" />
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor2" />
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor3" />
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor4" />
                            <Setter Property="Fill" Value="{StaticResource IcoHeartOn}" TargetName="Favor5" />
                        </DataTrigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="#DF6D6D6D"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ComboBoxItemAttrStyle" TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource ComboBoxItemStyleBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Key}" Value="Sweet">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource SweetBackground}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Key}" Value="Cool">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource CoolBackground}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Key}" Value="Pop">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource PopBackground}"/>
                        </DataTrigger>
                        <MultiDataTrigger >
                            <MultiDataTrigger.Conditions>
                                <Condition  Binding="{Binding Key}" Value="Pop" />
                                <Condition Binding="{Binding IsHighlighted, RelativeSource={RelativeSource Self}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#CF4D4D4D"/>
                            <Setter Property="Foreground" Value="{StaticResource PopForeground}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger >
                            <MultiDataTrigger.Conditions>
                                <Condition  Binding="{Binding Key}" Value="Sweet" />
                                <Condition Binding="{Binding IsHighlighted, RelativeSource={RelativeSource Self}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#CF4D4D4D"/>
                            <Setter Property="Foreground" Value="{StaticResource SweetForeground}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger >
                            <MultiDataTrigger.Conditions>
                                <Condition  Binding="{Binding Key}" Value="Cool" />
                                <Condition Binding="{Binding IsHighlighted, RelativeSource={RelativeSource Self}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#CF4D4D4D"/>
                            <Setter Property="Foreground" Value="{StaticResource CoolForeground}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger >
                            <MultiDataTrigger.Conditions>
                                <Condition  Binding="{Binding Key}" Value="" />
                                <Condition Binding="{Binding IsHighlighted, RelativeSource={RelativeSource Self}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#CF4D4D4D"/>
                        </MultiDataTrigger>
                        <!--<Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="#FF8D8D8D"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>-->
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboBoxItemSkillStyle" TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource ComboBoxItemStyleBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <Border x:Name="AtkBd">
                            <Border x:Name="DefBd">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsAttack}" Value="True">
                            <Setter Property="Background" TargetName="AtkBd" >
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                        <GradientStop Color="#AAD64D2E"/>
                                        <GradientStop Color="#19FB397F" Offset="0.8"/>
                                        <GradientStop Color="#00FB397F" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsDeffence}" Value="True">
                            <Setter Property="Background" TargetName="DefBd" >
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                        <GradientStop Color="#AA2332C9" Offset="1"/>
                                        <GradientStop Color="#193991FB" Offset="0.2"/>
                                        <GradientStop Color="#00FB397F"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsAttack}" Value="True"/>
                                <Condition Binding="{Binding IsDeffence}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="DefBd" Value="#00000000"/>
                            <Setter Property="Background" TargetName="AtkBd" Value="#00000000"/>
                            <Setter Property="Background" TargetName="Bd" >
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                        <GradientStop Color="#88A323C9"/>
                                        <GradientStop Color="#88A323C9" Offset="0.7"/>
                                        <GradientStop Color="#88A323C9" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="#DF6D6D6D"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ComboBoxItemDeckStyle" TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource ComboBoxItemStyleBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <Grid >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Fill="{StaticResource IcoLock}" Width="16" Height="16" Margin="2,2,4,2" HorizontalAlignment="Left" VerticalAlignment="Center" Name="Ico"/>
                            <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Border Grid.Column="1" Background="#44101010" HorizontalAlignment="Right">
                                <Label Content="{Binding DisplayIndex}" FontSize="9" Foreground="#EEC0C0C0" Width="20" HorizontalContentAlignment="Right" VerticalAlignment="Center" Padding="1"/>
                            </Border>
                            
                            <Grid Grid.Row="1" Grid.ColumnSpan="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="60" />
                                    <ColumnDefinition Width="90" />
                                    <ColumnDefinition Width="60"  />
                                </Grid.ColumnDefinitions>
                                <Label Content="コスト:" FontSize="9" Foreground="#EEC0C0C0" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="1"/>
                                <TextBlock Text="{Binding Cost}" Margin="36,0,2,0" VerticalAlignment="Center" Padding="0" HorizontalAlignment="Right" />

                                <Label Grid.Column="1"  Content="発揮値:" FontSize="9" Foreground="#EEC0C0C0" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="1"/>
                                <TextBlock Grid.Column="1" Text="{Binding Power}" Margin="36,0,2,0" VerticalAlignment="Center" Padding="0" HorizontalAlignment="Right" />

                                <StackPanel Orientation="Horizontal" Grid.Column="2" Height="Auto" HorizontalAlignment="Left">
                                    <Label  Content="枚数:" FontSize="9" Foreground="#EEC0C0C0" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="1"/>
                                    <TextBlock Text="{Binding MainCount}" Margin="2,0" VerticalAlignment="Center" Padding="0" />
                                    <TextBlock Text="/" Margin="0" VerticalAlignment="Center" Padding="0" />
                                    <TextBlock Text="{Binding SubCount}" Margin="2,0" VerticalAlignment="Center" Padding="0" />
                                </StackPanel>

                            </Grid>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Lock}" Value="False">
                            <Setter Property="Visibility" Value="Hidden" TargetName="Ico"/>
                        </DataTrigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="#DF6D6D6D"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxItemNameStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="BorderBrush" Value="#FF505050"/>
        <Setter Property="Padding" Value="3,0,3,0"/>
        <Setter Property="Foreground" Value="#FFEAEAEA"/>
        <Setter Property="Background" Value="#AA505050"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Attr}" Value="Sweet">
                            <Setter Property="Background" >
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                        <GradientStop Color="#AAFF5384" Offset="0"/>
                                        <GradientStop Color="#77892F49" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Attr}" Value="Cool">
                            <Setter Property="Background" >
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                        <GradientStop Color="#AA007eea" Offset="0"/>
                                        <GradientStop Color="#7700437C" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Attr}" Value="Pop">
                            <Setter Property="Background" >
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                        <GradientStop Color="#AAFF8432" Offset="0"/>
                                        <GradientStop Color="#7789461A" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="#FF8D8D8D"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleButtonAtkStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="#FFFF2A2A"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Cursor" Value ="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Chrome" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Border SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" Margin="2">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Foreground"  Value="#FFF0F0F0"/>
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFE26B33" Offset="0"/>
                                        <GradientStop Color="#FFE26B33" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleButtonDefStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="#FF2AC4FF"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Cursor" Value ="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Chrome" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Border SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" Margin="2">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Foreground"  Value="#FFF0F0F0"/>
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                        <GradientStop Color="#FF2272AA" Offset="0"/>
                                        <GradientStop Color="#FF2272AA" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleButtonEventStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="#FF2AFF64"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Cursor" Value ="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Chrome" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Border SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" Margin="2">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Foreground"  Value="#FFF0F0F0"/>
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF2CCD4A" Offset="0"/>
                                        <GradientStop Color="#FF2CCD4A" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">40</sys:Double>
    <sys:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}">40</sys:Double>

    <LinearGradientBrush x:Key="VerticalScrollBarBackground" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Offset="0" Color="#5526215C" />
        <GradientStop Offset="0.2" Color="#5526215C" />
        <GradientStop Offset="0.8" Color="#5526215C" />
        <GradientStop Offset="1" Color="#5526215C" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HorizontalScrollBarBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#5526215C" />
        <GradientStop Offset="0.2" Color="#5526215C" />
        <GradientStop Offset="0.8" Color="#5526215C" />
        <GradientStop Offset="1" Color="#5526215C" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="VerticalScrollBarBackground_Over" StartPoint="0,0" EndPoint="1,0">
        <GradientStop Offset="0" Color="#AA292139" />
        <GradientStop Offset="0.2" Color="#AA292139" />
        <GradientStop Offset="0.8" Color="#AA292139" />
        <GradientStop Offset="1" Color="#AA292139" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HorizontalScrollBarBackground_Over" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#AA292139" />
        <GradientStop Offset="0.2" Color="#AA292139" />
        <GradientStop Offset="0.8" Color="#AA292139" />
        <GradientStop Offset="1" Color="#AA292139" />
    </LinearGradientBrush>

    <Storyboard x:Key="ScollBarMouseEnter">
        <ColorAnimation DecelerationRatio="1"
                        Duration="0:0:0.5"
                        Storyboard.TargetName="Bg"
                        Storyboard.TargetProperty="(Grid.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                        To="#AA292139" />
        <ColorAnimation DecelerationRatio="1"
                        Duration="0:0:0.5"
                        Storyboard.TargetName="Bg"
                        Storyboard.TargetProperty="(Grid.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                        To="#AA292139" />
        <ColorAnimation DecelerationRatio="1"
                        Duration="0:0:0.5"
                        Storyboard.TargetName="Bg"
                        Storyboard.TargetProperty="(Grid.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)"
                        To="#AA292139" />
        <ColorAnimation DecelerationRatio="1"
                        Duration="0:0:0.5"
                        Storyboard.TargetName="Bg"
                        Storyboard.TargetProperty="(Grid.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)"
                        To="#AA292139" />
    </Storyboard>
    <Storyboard x:Key="ScollBarMouseLeave">
        <ColorAnimation AccelerationRatio="1"
                        Duration="0:0:1"
                        Storyboard.TargetName="Bg"
                        Storyboard.TargetProperty="(Grid.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                        To="#55292139" />
        <ColorAnimation AccelerationRatio="1"
                        Duration="0:0:1"
                        Storyboard.TargetName="Bg"
                        Storyboard.TargetProperty="(Grid.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                        To="#55292139" />
        <ColorAnimation AccelerationRatio="1"
                        Duration="0:0:1"
                        Storyboard.TargetName="Bg"
                        Storyboard.TargetProperty="(Grid.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)"
                        To="#55292139" />
        <ColorAnimation AccelerationRatio="1"
                        Duration="0:0:1"
                        Storyboard.TargetName="Bg"
                        Storyboard.TargetProperty="(Grid.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)"
                        To="#55292139" />
    </Storyboard>

    <Storyboard x:Key="ScollBarButtonMouseEnter">
        <ColorAnimation DecelerationRatio="1"
                        Duration="0:0:1"
                        Storyboard.TargetName="inBorder"
                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                        To="#AA1B9BFE" />
        <ThicknessAnimation Duration="0"
                            Storyboard.TargetName="inBorder"
                            Storyboard.TargetProperty="BorderThickness"
                            To="1" />
    </Storyboard>
    <Storyboard x:Key="ScollBarButtonMouseLeave">
        <ColorAnimation DecelerationRatio="1"
                        Duration="0:0:1"
                        Storyboard.TargetName="inBorder"
                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                        To="#00000000" />
        <ThicknessAnimation BeginTime="0:0:1"
                            Storyboard.TargetName="inBorder"
                            Storyboard.TargetProperty="BorderThickness"
                            To="0" />
    </Storyboard>
    <SolidColorBrush x:Key="ScrollBarArrowForeground" Color="#AA8D4AEE" />
    <SolidColorBrush x:Key="ScrollBarForeground" Color="#AAA885FF" />

    <LinearGradientBrush x:Key="ColorScrollThumbBackground" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#77000000" />
        <GradientStop Offset="1" Color="#77000000" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ColorScrollThumbBackground_Hover" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#BB1A1B41" />
        <GradientStop Offset="0.988" Color="#BB1A1B41" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ColorScrollThumbBorder" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#665A577E" />
        <GradientStop Offset="0.206" Color="#665A577E" />
        <GradientStop Offset="0.856" Color="#665A577E" />
        <GradientStop Offset="1" Color="#665A577E" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ColorScrollThumbBorder_Hover" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#AA4A27EE" />
        <GradientStop Offset="0.206" Color="#AA4A27EE" />
        <GradientStop Offset="0.856" Color="#AA4A27EE" />
        <GradientStop Offset="1" Color="#AA4A27EE" />
    </LinearGradientBrush>

    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="BorderBrush" Value="#00000000" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border x:Name="inBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        <ContentPresenter x:Name="ContentPresenter"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource VerticalScrollBarBackground}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ScollBarButtonMouseEnter}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ScollBarButtonMouseLeave}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{StaticResource VerticalScrollBarBackground}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ScollBarButtonMouseEnter}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ScollBarButtonMouseLeave}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true">
                            <Setter Property="Background" Value="{StaticResource VerticalScrollBarBackground}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ScollBarButtonMouseEnter}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ScollBarButtonMouseLeave}" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"
                               Fill="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="ThumbBg"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{StaticResource ColorScrollThumbBorder}"
                            BorderThickness="1"
                            CornerRadius="2" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ThumbBg" Property="Background" Value="{StaticResource ColorScrollThumbBackground_Hover}" />
                            <Setter TargetName="ThumbBg" Property="BorderBrush" Value="{StaticResource ColorScrollThumbBorder_Hover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#55222222" />
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="{StaticResource ScrollBarForeground}" />
        <Setter Property="Width" Value="20" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg"
                          Background="{StaticResource VerticalScrollBarBackground}"
                          SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="15" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition MaxHeight="15" />
                        </Grid.RowDefinitions>
                        <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Style="{StaticResource ScrollBarButton}">
                            <Grid>
                                <Path x:Name="DecreaseArrow"
                                      Data="M 0 4 L 8 4 L 4 0 Z"
                                      Stroke="{TemplateBinding Foreground}"
                                      StrokeThickness="1" />
                            </Grid>
                        </RepeatButton>
                        <Track x:Name="PART_Track"
                               Grid.Row="1"
                               IsDirectionReversed="true"
                               IsEnabled="{TemplateBinding IsMouseOver}">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Background="#190E758C"
                                              Command="{x:Static ScrollBar.PageUpCommand}"
                                              Style="{StaticResource ScrollBarPageButton}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Background="#190E758C"
                                              Command="{x:Static ScrollBar.PageDownCommand}"
                                              Style="{StaticResource ScrollBarPageButton}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Name="ScrollBarThumb"
                                       Background="{StaticResource ColorScrollThumbBackground}"
                                       Style="{StaticResource ScrollBarThumb}" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton Grid.Row="2"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Style="{StaticResource ScrollBarButton}">
                            <Grid>
                                <Path x:Name="IncreaseArrow"
                                      Data="M 0 0 L 4 4 L 8 0 Z"
                                      Stroke="{TemplateBinding Foreground}"
                                      StrokeThickness="1" />
                            </Grid>
                        </RepeatButton>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ScrollBar.MouseEnter">
                            <BeginStoryboard Storyboard="{StaticResource ScollBarMouseEnter}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="ScrollBar.MouseLeave">
                            <BeginStoryboard Storyboard="{StaticResource ScollBarMouseLeave}" />
                        </EventTrigger>
                        <Trigger Property="Orientation" Value="Vertical" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bg" Property="Background" Value="{StaticResource ScrollBarDisabledBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Height" Value="20" />
                <Setter Property="MinHeight" Value="20" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg"
                                  Background="{StaticResource HorizontalScrollBarBackground}"
                                  SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="15" />
                                    <ColumnDefinition Width="0.00001*" />
                                    <ColumnDefinition MaxWidth="15" />
                                </Grid.ColumnDefinitions>
                                <RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Style="{StaticResource ScrollBarButton}">
                                    <Grid>
                                        <Path x:Name="DecreaseArrow"
                                              Data="M 4 0 L 0 4 L 4 8 Z"
                                              Stroke="{TemplateBinding Foreground}"
                                              StrokeThickness="1" />
                                    </Grid>

                                </RepeatButton>
                                <Track x:Name="PART_Track"
                                       Grid.Column="1"
                                       IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Background="#190E758C"
                                                      Command="{x:Static ScrollBar.PageLeftCommand}"
                                                      Style="{StaticResource ScrollBarPageButton}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Background="#190E758C"
                                                      Command="{x:Static ScrollBar.PageRightCommand}"
                                                      Style="{StaticResource ScrollBarPageButton}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="ScrollBarThumb"
                                               Background="{StaticResource ColorScrollThumbBackground}"
                                               Style="{StaticResource ScrollBarThumb}" />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton Grid.Column="2"
                                              Command="{x:Static ScrollBar.LineRightCommand}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Style="{StaticResource ScrollBarButton}">
                                    <Grid>
                                        <Path x:Name="IncreaseArrow"
                                              Data="M 0 0 L 4 4 L 0 8 Z"
                                              Stroke="{TemplateBinding Foreground}"
                                              StrokeThickness="1" />
                                    </Grid>

                                </RepeatButton>

                            </Grid>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="ScrollBar.MouseEnter">
                                    <BeginStoryboard Storyboard="{StaticResource ScollBarMouseEnter}" />
                                </EventTrigger>
                                <EventTrigger RoutedEvent="ScrollBar.MouseLeave">
                                    <BeginStoryboard Storyboard="{StaticResource ScollBarMouseLeave}" />
                                </EventTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="Bg" Property="Background" Value="{StaticResource ScrollBarDisabledBackground}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <LinearGradientBrush x:Key="ColorIndicatorThumbBackground" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#88071ADE" />
        <GradientStop Offset="0.1" Color="#88071ADE" />
        <GradientStop Offset="0.9" Color="#88071ADE" />
        <GradientStop Offset="1" Color="#88071ADE" />
    </LinearGradientBrush>
    <Style x:Key="IndicatorThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Cursor" Value="Arrow" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="ThumbBg"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{StaticResource ColorScrollThumbBorder}"
                            BorderThickness="0"
                            CornerRadius="2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="IndicatorBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="{StaticResource ScrollBarForeground}" />
        <Setter Property="Width" Value="2" />
        <Setter Property="MinWidth" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg"
                          Background="Transparent"
                          SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Track x:Name="PART_Track"
                               Grid.Row="1"
                               IsDirectionReversed="true"
                               IsEnabled="{TemplateBinding IsMouseOver}">
                            <Track.Thumb>
                                <Thumb x:Name="ScrollBarThumb"
                                       Background="{StaticResource ColorIndicatorThumbBackground}"
                                       Style="{StaticResource IndicatorThumb}" />
                            </Track.Thumb>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bg" Property="Background" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Height" Value="2" />
                <Setter Property="MinHeight" Value="2" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg"
                                  Background="Transparent"
                                  SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Track x:Name="PART_Track"
                                       Grid.Column="1"
                                       IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.Thumb>
                                        <Thumb x:Name="ScrollBarThumb"
                                               Background="{StaticResource ColorIndicatorThumbBackground}"
                                               Style="{StaticResource IndicatorThumb}" />
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="Bg" Property="Background" Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner"
                                   Grid.Row="1"
                                   Grid.Column="1"
                                   Fill="#66000000" />
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                    Grid.Row="0"
                                                    Grid.Column="0"
                                                    Margin="{TemplateBinding Padding}"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                    CanHorizontallyScroll="False"
                                                    CanVerticallyScroll="False"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Grid.Row="0"
                                   Grid.Column="1"
                                   AutomationProperties.AutomationId="VerticalScrollBar"
                                   Cursor="Arrow"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   Minimum="0"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding VerticalOffset,
                                                   Mode=OneWay,
                                                   RelativeSource={RelativeSource TemplatedParent}}" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Grid.Row="1"
                                   Grid.Column="0"
                                   AutomationProperties.AutomationId="HorizontalScrollBar"
                                   Cursor="Arrow"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   Minimum="0"
                                   Orientation="Horizontal"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding HorizontalOffset,
                                                   Mode=OneWay,
                                                   RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="TabControlNormalBorderBrush" Color="#8C8E94"/>
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Padding" Value="4,4,4,4"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
        <Setter Property="Background" Value="#F9F9F9"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel" Margin="2,2,2,0" IsItemsHost="true" Panel.ZIndex="1" Grid.Column="0" Grid.Row="0" KeyboardNavigation.TabIndex="1"/>
                        <Border x:Name="ContentPanel" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="0" Grid.Row="1" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="SelectedContent"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="TabItemBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FF4A464D" Offset="0.15"/>
        <GradientStop Color="#FF474945" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TabItemHotBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FF469AED" Offset="0.15"/>
        <GradientStop Color="#FF489BE7" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TabItemSelectedBackground" Color="#FF3257D4"/>
    <LinearGradientBrush x:Key="TabItemHotBorderBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FF369AED" Offset="0.15"/>
        <GradientStop Color="#FF489BE7" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TabItemDisabledBackground" Color="#F4F4F4"/>
    <SolidColorBrush x:Key="TabItemDisabledBorderBrush" Color="#FFC9C7BA"/>
    <Style  TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="6,1,6,1"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource TabItemBackground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid SnapsToDevicePixels="true">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="Content" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header" RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemHotBackground}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemSelectedBackground}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemHotBorderBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,0,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="0,1,1,1"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Top"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-2,-2,-1"/>
                            <Setter Property="Margin" TargetName="Content" Value="0,0,0,1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Bottom"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-1,-2,-2"/>
                            <Setter Property="Margin" TargetName="Content" Value="0,1,0,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-2,-1,-2"/>
                            <Setter Property="Margin" TargetName="Content" Value="0,0,1,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-1,-2,-2,-2"/>
                            <Setter Property="Margin" TargetName="Content" Value="1,0,0,0"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemDisabledBackground}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemDisabledBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ComboBoxBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FF444444" Offset="0"/>
        <GradientStop Color="#FF333333" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBoxBorder" Color="#FFA0A0A0"/>
    <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
    <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Chrome" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >
                        <Grid HorizontalAlignment="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path x:Name="Arrow" Fill="#DDEFEFEF" HorizontalAlignment="Center" Margin="3,1,0,0" VerticalAlignment="Center" Data="{StaticResource DownArrowGeometry}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="Arrow" Value="#FF1F1F1F"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Height" Value="26"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}"/>
        <Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
        <Setter Property="Background" Value="{StaticResource ComboBoxBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ComboBoxBorder}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="4,3"/>
        <Setter Property="Cursor" Value ="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup" Margin="1" AllowsTransparency="true" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Grid.ColumnSpan="2">
                            <Border x:Name="Shdw" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}" Background="Transparent">
                                <Border x:Name="DropDownBorder" Background="#33404040" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                                    <ScrollViewer CanContentScroll="true">
                                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Border>
                        </Popup>
                        <ToggleButton Style="{StaticResource ComboBoxReadonlyToggleButton}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.ColumnSpan="2" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                            <Setter Property="Background" TargetName="Shdw" Value="#71000000"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#FF707070"/>
                            <Setter Property="Background" Value="#FF202020"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" Value="{StaticResource FocusedBorder}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ComboBoxAttrStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
        <Setter Property="Background" Value="{StaticResource ComboBoxBackground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup" Margin="1" AllowsTransparency="true" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Grid.ColumnSpan="2">
                            <Border x:Name="Shdw" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}" Background="Transparent">
                                <Border x:Name="DropDownBorder" Background="#33404040" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                                    <ScrollViewer CanContentScroll="true">
                                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Border>
                        </Popup>
                        <ToggleButton Style="{StaticResource ComboBoxReadonlyToggleButton}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.ColumnSpan="2" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                            <Setter Property="Background" TargetName="Shdw" Value="#71000000"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="Text" Value="Sweet">
                            <Setter Property="Background" Value="{StaticResource SweetBackground}"/>
                        </Trigger>
                        <Trigger Property="Text" Value="Cool">
                            <Setter Property="Background" Value="{StaticResource CoolBackground}"/>
                        </Trigger>
                        <Trigger Property="Text" Value="Pop">
                            <Setter Property="Background" Value="{StaticResource PopBackground}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" Value="{StaticResource FocusedBorder}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#FF707070"/>
                            <Setter Property="Background" Value="#FF202020"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>